/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainRouteRouteImport } from './routes/_main/route'
import { Route as MainIndexRouteImport } from './routes/_main/index'
import { Route as MainQrIndexRouteImport } from './routes/_main/qr/index'
import { Route as MainGlyphsIndexRouteImport } from './routes/_main/glyphs/index'

const MainRouteRoute = MainRouteRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainQrIndexRoute = MainQrIndexRouteImport.update({
  id: '/qr/',
  path: '/qr/',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainGlyphsIndexRoute = MainGlyphsIndexRouteImport.update({
  id: '/glyphs/',
  path: '/glyphs/',
  getParentRoute: () => MainRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof MainIndexRoute
  '/glyphs': typeof MainGlyphsIndexRoute
  '/qr': typeof MainQrIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof MainIndexRoute
  '/glyphs': typeof MainGlyphsIndexRoute
  '/qr': typeof MainQrIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_main': typeof MainRouteRouteWithChildren
  '/_main/': typeof MainIndexRoute
  '/_main/glyphs/': typeof MainGlyphsIndexRoute
  '/_main/qr/': typeof MainQrIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/glyphs' | '/qr'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/glyphs' | '/qr'
  id: '__root__' | '/_main' | '/_main/' | '/_main/glyphs/' | '/_main/qr/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MainRouteRoute: typeof MainRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/qr/': {
      id: '/_main/qr/'
      path: '/qr'
      fullPath: '/qr'
      preLoaderRoute: typeof MainQrIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/glyphs/': {
      id: '/_main/glyphs/'
      path: '/glyphs'
      fullPath: '/glyphs'
      preLoaderRoute: typeof MainGlyphsIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
  }
}

interface MainRouteRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
  MainGlyphsIndexRoute: typeof MainGlyphsIndexRoute
  MainQrIndexRoute: typeof MainQrIndexRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainIndexRoute: MainIndexRoute,
  MainGlyphsIndexRoute: MainGlyphsIndexRoute,
  MainQrIndexRoute: MainQrIndexRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  MainRouteRoute: MainRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
